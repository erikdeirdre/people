name: build_and_package

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'VERSION'
    branches:
      - '**'
      - '!releases/**'
  pull_request:
    types:
      - opened

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8,3.9]

    env:
      DB_DATABASE: people_test
      DB_USER: root
      DB_PASSWORD: 'root'
      DB_HOST: localhost
      SQLALCHEMY_URI: "mysql://root:root@localhost/people_test"
      USPS_URL: ${{ secrets.USPS_URL }}
      USPS_USERID: ${{ secrets.USPS_USERID }}
      LOG_LEVEL: ${{ secrets.LOG_LEVEL }}

    steps:
    - uses: actions/checkout@v1

    - name: start mysql
      run:  |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE people_test;' -uroot -proot

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Run Migrations
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        flask db upgrade

    - name: Test with pytest
      run: |
        pip install -r tests/requirements.txt
        coverage run -m pytest --junitxml=coverage-reports/coverage.xml
        coverage xml

    - name: Debug
      if: always()
      run: |
        ls -l
        cat url.txt

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: coverage-reports/*.xml

    - name: SonarCloud Scan
      if: always()
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
